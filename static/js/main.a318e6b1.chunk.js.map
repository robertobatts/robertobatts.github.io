{"version":3,"sources":["components/commons/Button.jsx","components/ScrollDownArrow.jsx","components/IntroSection.jsx","components/SkillsSection.jsx","components/TopBar.jsx","components/commons/ProjectCard.jsx","components/ProjectsSection.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","href","this","props","link","target","rel","className","style","color","content","React","Component","ScrollDownArrow","class","goto","IntroSection","Typography","variant","gutterBottom","SkillsSection","id","src","alt","getBackendLogos","getCiCdCloudLogos","getOtherLogos","getLogos","logoNames","logos","forEach","logoName","push","key","ProjectCard","imageSrc","title","description","website","demo","github","ProjectsSection","paddingBottom","socialLinks","Footer","getSocialLogos","Object","keys","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a318e6b1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Button.css';\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <a\r\n        href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\"\r\n        className=\"button flat-shadow-in-out\" \r\n        style={{'backgroundColor': this.props.color}}>\r\n         {this.props.content}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button","import React, { Component } from 'react'\r\nimport './ScrollDownArrow.css'\r\n\r\nclass ScrollDownArrow extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"arrow-container\">\r\n        <a class=\"arrow-inner vertical-center\" href={this.props.goto}>\r\n          <div class=\"bounce\">\r\n            <div class=\"arrow down\"/>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ScrollDownArrow","import React from 'react'\r\nimport Button from './commons/Button'\r\nimport ScrollDownArrow from './ScrollDownArrow'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport './IntroSection.css'\r\n\r\nclass IntroSection extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"intro-section-container horizontal-center\">\r\n        <div class=\"intro-absolute-wrapper\">\r\n          <div className=\"intro-section-inner\">\r\n            <Typography variant=\"h2\">Roberto Battaglia</Typography>\r\n            <Typography variant=\"h5\" gutterBottom>BACKEND DEVELOPER</Typography>\r\n            <Button\r\n              content={<Typography variant=\"button\">Open Resume</Typography>} color={'#1da1f2'}\r\n              link={process.env.PUBLIC_URL + \"/resume.pdf\"}\r\n            />\r\n          </div>\r\n          <div class=\"scroll-down-arrow-container\">\r\n            <ScrollDownArrow goto=\"#skills\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default IntroSection","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport './SkillsSection.css'\r\n\r\nclass SkillsSection extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"skills\" className=\"wave-bar-wrapper\">\r\n          <div className=\"wave-bar-inner\">\r\n            <img className=\"wave-bar\" src={process.env.PUBLIC_URL + '/wave-bar-1.svg'} alt=\"wave-bar-1\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"skills-section-container\">\r\n          <div className=\"p-grid skills-section-grid p-justify-center\">\r\n            <div className=\"p-col-12 p-md-4 p-lg-4 p-xl-4 horizontal-center\">\r\n              <Typography style={{ 'height': '64px' }} variant=\"h5\" gutterBottom>BACK END</Typography>\r\n              {this.getBackendLogos()}\r\n            </div>\r\n            <div className=\"p-col-12 p-md-4 p-lg-4 p-xl-4 horizontal-center\">\r\n              <Typography style={{ 'height': '64px' }} variant=\"h5\" gutterBottom>CI/CD AND CLOUD</Typography>\r\n              {this.getCiCdCloudLogos()}\r\n            </div>\r\n            <div className=\"p-col-12 p-md-4 p-lg-4 p-xl-4 horizontal-center\">\r\n              <Typography style={{ 'height': '64px' }} variant=\"h5\" gutterBottom>OTHER TOOLS</Typography>\r\n              {this.getOtherLogos()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"wave-bar-wrapper\">\r\n          <div className=\"wave-bar-inner\">\r\n            <img className=\"wave-bar\" src={process.env.PUBLIC_URL + '/wave-bar-2.svg'} alt=\"wave-bar-2\" />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  getBackendLogos() {\r\n    return this.getLogos([\"java\", \"mongodb\", \"spring-framework\", \"golang\", \"apache-kafka\", \"maven\", \"sql-generic\", \"ibm-mq\"])\r\n  }\r\n\r\n  getCiCdCloudLogos() {\r\n    return this.getLogos([\"jenkins\", \"jfrog-artifactory\", \"aws\", \"aws-ec2\", \"aws-lambda\"])\r\n  }\r\n\r\n  getOtherLogos() {\r\n    return this.getLogos([\"git\", \"react\", \"bash\", \"intellij\", \"vs-code\"])\r\n  }\r\n\r\n  getLogos(logoNames) {\r\n    let logos = []\r\n    logoNames.forEach(logoName => {\r\n      logos.push(\r\n        <div key={logoName} className=\"p-col-6 p-sm-3 p-md-6 p-lg-6 p-xl-4 horizontal-center\">\r\n          <img className=\"skill-logo-sm\" alt={logoName} src={process.env.PUBLIC_URL + '/logos/' + logoName + '.svg'} />\r\n        </div>\r\n      )\r\n    })\r\n    return <div className=\"p-grid p-justify-center\">{logos}</div>\r\n  }\r\n}\r\n\r\nexport default SkillsSection","import React from 'react'\r\nimport './TopBar.css'\r\n\r\nclass TopBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"topbar-container vertical-center\">\r\n        <div className=\"p-grid topbar-grid\">\r\n          <div className=\"p-col-fixed\">\r\n            <a href=\"#home\">Home</a>\r\n          </div>\r\n          <div className=\"p-col-fixed\">\r\n            <a href=\"#about\">About me</a>\r\n          </div>\r\n          <div className=\"p-col-fixed\">\r\n            <a href=\"#projects\">Projects</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar","import React, { Component } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from './Button'\r\nimport './ProjectCard.css'\r\n\r\nclass ProjectCard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"project-card-container flat-shadow-in-out\">\r\n        <div className=\"project-card-background\" style={{ \"backgroundImage\": this.props.imageSrc }} />\r\n        <div className=\"project-card-wrapper vertical-center\">\r\n          <div className=\"project-card-content horizontal-center\">\r\n            <Typography variant=\"h5\">{this.props.title}</Typography>\r\n            <div className=\"project-card-description vertical-center\">{this.props.description}</div>\r\n            <div className=\"project-card-link-section\">\r\n              {this.props.website && <Button link={this.props.website} content=\"Website\" color={'#1da1f2'} />}\r\n              {this.props.demo && <Button link={this.props.demo} content=\"Demo\" color={'#1da1f2'} />}\r\n              {this.props.github && <Button link={this.props.github} content=\"GitHub\" color={'#1da1f2'} />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectCard","import React, { Component } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport './ProjectsSection.css'\r\nimport ProjectCard from './commons/ProjectCard'\r\n\r\nclass ProjectsSection extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"projects\" className=\"projects-section-container horizontal-center\">\r\n          <Typography variant=\"h5\" style={{paddingBottom: \"10px\"}}>PROJECTS</Typography>\r\n          <ProjectCard \r\n            title=\"golexa\"\r\n            description=\"An SDK to develop skills for Alexa\"\r\n            github=\"https://github.com/robertobatts/golexa\"\r\n            imageSrc={'url(\"' + process.env.PUBLIC_URL + '/projects/golexa.png\")'}\r\n          />\r\n          <ProjectCard \r\n            title=\"ker-e-bians\"\r\n            description=\"ker-e-bians calculates the optimized path that guides you through the roads with the most parking spots possible in London\"\r\n            demo=\"https://www.youtube.com/watch?v=gGzA_BMI9EQ\"\r\n            github=\"https://github.com/robertobatts/ker-e-bians\"\r\n            imageSrc={'url(\"' + process.env.PUBLIC_URL + '/projects/ker-e-bians.png\")'}\r\n          />\r\n          <ProjectCard \r\n            title=\"magic sorter\"\r\n            description=\"A tool to visualize sorting algorithms\"\r\n            website=\"https://magic-sorter.netlify.com/\"\r\n            github=\"https://github.com/robertobatts/magic-sorter\"\r\n            imageSrc={'url(\"' + process.env.PUBLIC_URL + '/projects/magic-sorter.png\")'}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectsSection","import React, { Component } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport './Footer.css'\r\n\r\nconst socialLinks = {\r\n  \"linkedin\": \"https://www.linkedin.com/in/robertobatts\",\r\n  \"github\": \"https://github.com/robertobatts\",\r\n  \"stackoverflow\": \"https://stackoverflow.com/users/10342150/robertobatts\",\r\n  \"gmail\": \"mailto:battaroberto@gmail.com?Subject=I want to hire you\"\r\n}\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"wave-footer-wrapper\">\r\n          <div className=\"wave-footer-inner\">\r\n            <img className=\"wave-footer\" src={process.env.PUBLIC_URL + '/wave-footer.svg'} alt=\"wave-footer\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-container\">\r\n          <div className=\"horizontal-center\">\r\n            <Typography variant=\"h5\">Contact me</Typography>\r\n            {this.getSocialLogos()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getSocialLogos() {\r\n    let logos = []\r\n    Object.keys(socialLinks).forEach(logoName => {\r\n      logos.push(\r\n        <a key={logoName} href={socialLinks[logoName]} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img className=\"social-logo-sm\" alt={logoName} src={process.env.PUBLIC_URL + '/logos/' + logoName + '.svg'} />\r\n        </a>\r\n      )\r\n    })\r\n    return logos\r\n  }\r\n\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport './App.css';\r\nimport IntroSection from './components/IntroSection'\r\nimport TopBar from './components/TopBar'\r\nimport SkillsSection from './components/SkillsSection'\r\nimport ProjectsSection from './components/ProjectsSection'\r\nimport Footer from './components/Footer'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      {/*<TopBar/>*/}\r\n      <IntroSection/>\r\n      <SkillsSection/>\r\n      <ProjectsSection/>\r\n      <Footer/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"primeflex/primeflex.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}